@model UserProfileManager.DTOs.LoginViewDTO

@{
    Layout = "_LoginLayout";
    ViewData["Title"] = "Login";
}

<div class="text-center mb-4">
    <h1>@ViewData["Title"]</h1>
</div>

@if (ViewData.ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<form asp-action="Login" method="post" class="mx-auto" style="max-width: 400px;">
    <!-- UniqueName input -->
    <div class="form-outline mb-4 text-start">
        <input type="text" asp-for="UniqueName" id="form2Example1" class="form-control form-control-lg" />
        <label class="form-label" for="form2Example1">UniqueName</label>
        <span asp-validation-for="UniqueName" class="text-danger"></span>
    </div>

    <!-- Password input -->
    <div class="form-outline mb-4 text-start">
        <input type="password" asp-for="Password" id="form2Example2" class="form-control form-control-lg" />
        <label class="form-label" for="form2Example2">Password</label>
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <!-- 2 column grid layout for inline styling -->
    <div class="row mb-4">
        <div class="col d-flex justify-content-start">
            <!-- Checkbox -->
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="form2Example31" />
                <label class="form-check-label" for="form2Example31"> Remember me </label>
            </div>
        </div>
    </div>

    <!-- Submit button -->
    <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-lg mb-4">Sign in</button>

    <!-- Register buttons -->
    <div class="text-center">
        <p>Not a member? <a asp-action="Create" asp-controller="User">Register</a></p>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
